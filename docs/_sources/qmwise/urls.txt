URLs
----

This part of the guide is under development.  Some additional
information is available in the `URLs
<https://www.questionmark.com/content/urls>`_ section of the old guide.

Access Methods
~~~~~~~~~~~~~~

The *Access* methods provide a group of methods that all return
cryptographically signed URLs that can be passed to the user's browser
to provide them single-sign on access to a particular part of the
system. The URLs returned are time limited so you must use these methods
on a just in time basis, a suitable implementation would be call the
method in response to a user navigation request and issue a redirect to
the users browser.

..  qm:meth::   GetAccessAdministrator
    :input:     Administrator_Name   string
    :output:    URL      string

    Given the name of an administrator, returns a URL that enables that
    administrator access the Enterprise Manager portal without having to
    provide additional login credentials.  This is achieved through
    the creation of a one-time access link.
    
    ..  note::  Users will see the message *You have just used your
                one-time login link.* when they access Enterprise
                Manager using a link generated by GetAccessAdministrator.
                    
    ..  note::  In Perception 5.7 and in some older OnDemand
                repositories the resulting URL provides access to a
                limited set of Enterprise Manager functions through a
                reduced portal experience that excludes Questionmark
                Analytics.
    
    Example SOAP 1.1 request::

        <SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
            <SOAP-ENV:Header>
                  <Security xmlns="http://questionmark.com/QMWISe/">
                    <ClientID>qmwise_user</ClientID>
                    <Checksum>password</Checksum>
                </Security>
            </SOAP-ENV:Header>
            <SOAP-ENV:Body>
                <GetAccessAdministrator xmlns="http://questionmark.com/QMWISe/">
                    <Administrator_Name>jsmith</Administrator_Name>
                </GetAccessAdministrator>
            </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>

    Response::

        <?xml version="1.0" encoding="utf-8"?>
        <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <soap:Header>
                <Security xmlns="http://questionmark.com/QMWISe/">
                    <ClientID>qmwise_user</ClientID>
                    <Checksum>password</Checksum>
                </Security>
            </soap:Header>
            <soap:Body>
                <GetAccessAdministratorResponse xmlns="http://questionmark.com/QMWISe/">
                    <URL>https://ondemand.questionmark...</URL>
                </GetAccessAdministratorResponse>
            </soap:Body>
        </soap:Envelope>

..  qm:meth::   GetAccessAssessment
    :input:     Assessment_ID string, Participant_Name string,
                Participant_Details string, Group_name string
    :output:    URL      string

..  qm:meth::   GetAccessAssessmentList
    :input:     Participant_Name   string
    :output:    URL      string

..  qm:meth::   GetAccessAssessmentNotify
    :input:     Assessment_ID string, Participant_Name string,
                Notify string, PIP string, ParameterList ParameterList
    :output:    URL      string

..  qm:meth::   GetAccessReport
    :input:     Result_ID   string
    :output:    URL      string

    Given a result ID this method returns a URL that can be used to run
    a coaching report for the participant who took the assessment that
    generated the result.  If the result ID does not exist in the
    repository then error code 1501 is returned: *Cannot find result*.

    Example SOAP 1.1 request::
    
        <SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
            <SOAP-ENV:Header>
                <Security xmlns="http://questionmark.com/QMWISe/">
                    <ClientID>qmwise_user</ClientID>
                    <Checksum>password</Checksum>
                </Security>
            </SOAP-ENV:Header>
            <SOAP-ENV:Body>
                <GetAccessReport xmlns="http://questionmark.com/QMWISe/">
                    <Result_ID>1154751008</Result_ID>
                </GetAccessReport>
            </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>

    Response::
    
        <?xml version="1.0" encoding="utf-8"?>
        <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <soap:Header>
                <Security xmlns="http://questionmark.com/QMWISe/">
                    <ClientID>qmwise_user</ClientID>
                    <Checksum>password</Checksum>
                </Security>
            </soap:Header>
            <soap:Body>
                <GetAccessReportResponse xmlns="http://questionmark.com/QMWISe/">
                    <URL>https://ondemand.questionmark...</URL>
                </GetAccessReportResponse>
            </soap:Body>
        </soap:Envelope>
            
..  qm:meth::   GetAccessReportTemplate
    :input:     Result_ID string, Template_Name string
    :output:    URL      string

    Similar to :qm:meth:`GetAccessReport` but allows an additional
    argument to be given controlling the name of the coaching report
    template to use.

..  qm:meth::   GetAccessScheduleNotify
    :input:     Schedule_ID string, Participant_Name string,
                Notify string, PIP string, ParameterList ParameterList
    :output:    GetAccessScheduleNotifyResult string


Parameter Lists
~~~~~~~~~~~~~~~

..  qm:xtype::  ParameterList

    ..  qm:xfield:: Parameter Parameter
        :optional:
        :max: unbounded    


..  qm:xtype::  ParameterList

    ..  qm:xfield:: Name string
        :optional:

    ..  qm:xfield:: Value string
        :optional:

